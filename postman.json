{
	"info": {
		"_postman_id": "ab738743-c5bd-434e-9c3d-73793725aa4c",
		"name": "balance API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3655747"
	},
	"item": [
		{
			"name": "get balances",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"",
							"pm.test(\"Validate that the 'james.eth' field is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData[\"james.eth\"]).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Validate that the 'kevin.eth' field is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData['kevin.eth']).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Validate that the 'sam.eth' field is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData['sam.eth']).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Validate that the 'keneth-is-an-invalid-address' field is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData[\"keneth-is-an-invalid-address\"]).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"addresses\": [\n        \"james.eth\",\n        \"kevin.eth\",\n        \"sam.eth\",\n        \"keneth\",\n        \"455656\",\n         \"0xd8dA6BF26964334aF9D7eEd9e03E53415D37aA96045\",\n        \"vitalik.eth\",\n        \"0x4687466ac9bD165cA3bF2F6b6446822560b9fC3d\",\n        \"michael.eth\",\n        \"12\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/balances",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"balances"
					]
				}
			},
			"response": [
				{
					"name": "get balances",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"addresses\": [\n        \"james.eth\",\n        \"kevin.eth\",\n        \"sam.eth\",\n        \"keneth\",\n        \"455656\",\n         \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n        \"vitalik.eth\",\n        \"0x4687466ac9bD165cA3bF2F6b6446822560b9fC3d\",\n        \"michael.eth\",\n        \"12\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/balances",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"balances"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "320"
						},
						{
							"key": "ETag",
							"value": "W/\"140-Ta6WGYe0hZY9nfeb0DrtR+lNp+k\""
						},
						{
							"key": "Date",
							"value": "Wed, 18 Oct 2023 12:31:21 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"james.eth\": \"1.543\",\n    \"kevin.eth\": \"0.7371\",\n    \"sam.eth\": \"0.0084\",\n    \"keneth-is-an-invalid-address\": \"0\",\n    \"455656-is-an-invalid-address\": \"0\",\n    \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\": \"935.143\",\n    \"vitalik.eth\": \"935.143\",\n    \"0x4687466ac9bD165cA3bF2F6b6446822560b9fC3d\": \"18.8519\",\n    \"michael.eth\": \"18.8519\",\n    \"12-is-an-invalid-address\": \"0\"\n}"
				}
			]
		}
	]
}